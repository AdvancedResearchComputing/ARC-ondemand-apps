echo starting before
sleep 2

# Export the module function if it exists
[[ $(type -t module) == "function" ]] && export -f module
module list

hostname
pwd

## stage the container for slightly faster responsive desktop
#
cp -v /projects/arcsingularity/<%= context.Container %> $TMPDIR

#### need VNC_PORT, NO_VNC_PORT, DISPLAY, and VNC_PW
#### put all in port.rc file to source within the container

display=$(($RANDOM % 300))
vnc_port=$(($display+5900))
no_vnc_port=$((($RANDOM % 28231) + 32768))

## get display and vnc_port
#
while ( (netstat -tln | grep -c $vnc_port)>0 && ((cd /tmp/.X11-unix && for x in X*; do echo ":${x#X}"; done) | grep -c $display)>0 ) ; do display=$(($RANDOM % 300)) && vnc_port=$(($display+5900)) && echo $vnc_port ; done

# get noVNC port
#
while ( (netstat -tln | grep -c $no_vnc_port)>0 ) ; do no_vnc_port=$((($RANDOM % 28231) + 32768)) && echo $no_vnc_port ; done

# Create random password to replace "headless"
#
export password="$(create_passwd 16)"
echo $password

## push into file for container
#
echo "export VNC_PORT=$vnc_port" >port.rc
echo "export NO_VNC_PORT=$no_vnc_port" >>port.rc
echo "export DISPLAY=:$display" >>port.rc
echo "export VNC_PW=${password}" >>port.rc
## set display on host
export DISPLAY=:$display 

ls -lah

## finally set port for ood
#
export port=$no_vnc_port


## think about using openssl
# export USERNAME=USER
# Define a password and export it for RStudio authentication
#password="$(create_passwd 16)"
# export password=$(openssl rand -base64 15)
# export PASSWORD=$password
# export RSTUDIO_PASSWORD=$PASSWORD
